{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","useState","setTitle","setMovie","loading","setLoading","isError","setIsError","htmlFor","type","id","placeholder","value","onChange","event","target","classNames","disabled","onClick","query","preventDefault","fetch","then","res","json","catch","Response","Error","response","allowedKeys","movieDataNormalized","Object","fromEntries","entries","filter","key","includes","Poster","length","Title","Plot","imdbID","finally","some","item","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad313592.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n  setMovies: (value: Movie[]) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  movies,\n  setMovies,\n}) => {\n  const [title, setTitle] = useState<string>('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const handleFindChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsError(false);\n  };\n\n  const handleFindClick = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    event.preventDefault();\n\n    setLoading(true);\n\n    getMovie(title)\n      .then((response) => {\n        if ('Error' in response && response.Error === 'Movie not found!') {\n          setIsError(true);\n        }\n\n        if ('Title' in response) {\n          const allowedKeys = ['Poster', 'Title', 'Plot', 'imdbID'];\n\n          const movieDataNormalized = Object.fromEntries(\n            Object\n              .entries(response)\n              .filter(([key]) => allowedKeys.includes(key)),\n          );\n\n          if (movieDataNormalized.Poster\n            && movieDataNormalized.Poster.length < 5) {\n            movieDataNormalized.Poster = (\n              'https://via.placeholder.com/360x270.png?text=no%20preview'\n            );\n          }\n\n          setMovie({\n            title: movieDataNormalized.Title,\n            description: movieDataNormalized.Plot,\n            imgUrl: movieDataNormalized.Poster,\n            imdbUrl: `https://www.imdb.com/title/${movieDataNormalized.imdbID}`,\n            imdbId: movieDataNormalized.imdbID,\n          });\n        }\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const handleAddClick = () => {\n    setIsError(false);\n\n    if (movie) {\n      const isMovieAdded = movies.some(item => item.imdbId === movie.imdbId);\n\n      if (!isMovieAdded) {\n        setMovies([...movies, movie]);\n      }\n\n      setTitle('');\n      setMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={title}\n              onChange={handleFindChange}\n            />\n          </div>\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button', {\n                'is-light': !loading,\n                'is-loading': loading,\n              })}\n              disabled={!title}\n              onClick={handleFindClick}\n            >\n              Find a movie\n            </button>\n          </div>\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddClick}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n\n        </div>\n      </form>\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=8722e14b';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          setMovies={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}